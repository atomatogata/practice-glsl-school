export class WebGLMath{static get Vec2(){return Vec2}static get Vec3(){return Vec3}static get Mat4(){return Mat4}static get Qtn(){return Qtn}}class Vec2{static create(t=0,e=0){const r=new Float32Array(2);return r[0]=t,r[1]=e,r}static length(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1])}static normalize(t){const e=Vec2.create(),r=Vec2.length(t);if(r>0){const c=1/r;e[0]=t[0]*c,e[1]=t[1]*c}return e}static dot(t,e){return t[0]*e[0]+t[1]*e[1]}static cross(t,e){Vec2.create();return t[0]*e[1]-t[1]*e[0]}}class Vec3{static create(t=0,e=0,r=0){const c=new Float32Array(3);return c[0]=t,c[1]=e,c[2]=r,c}static length(t){return Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2])}static normalize(t){const e=Vec3.create(),r=Vec3.length(t);if(r>0){const c=1/r;e[0]=t[0]*c,e[1]=t[1]*c,e[2]=t[2]*c}return e}static dot(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}static cross(t,e){return Vec3.create(t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0])}static faceNormal(t,e,r){const c=Vec3.create(e[0]-t[0],e[1]-t[1],e[2]-t[2]),a=Vec3.create(r[0]-t[0],r[1]-t[1],r[2]-t[2]),n=Vec3.create(c[1]*a[2]-c[2]*a[1],c[2]*a[0]-c[0]*a[2],c[0]*a[1]-c[1]*a[0]);return Vec3.normalize(n)}}class Mat4{static create(){return new Float32Array(16)}static identity(t){const e=null==t?Mat4.create():t;return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}static multiply(t,e,r){const c=null==r?Mat4.create():r,a=t[0],n=t[1],s=t[2],l=t[3],i=t[4],o=t[5],u=t[6],M=t[7],h=t[8],V=t[9],Q=t[10],y=t[11],f=t[12],m=t[13],p=t[14],q=t[15],g=e[0],I=e[1],A=e[2],F=e[3],d=e[4],v=e[5],w=e[6],N=e[7],z=e[8],b=e[9],P=e[10],k=e[11],x=e[12],G=e[13],L=e[14],W=e[15];return c[0]=g*a+I*i+A*h+F*f,c[1]=g*n+I*o+A*V+F*m,c[2]=g*s+I*u+A*Q+F*p,c[3]=g*l+I*M+A*y+F*q,c[4]=d*a+v*i+w*h+N*f,c[5]=d*n+v*o+w*V+N*m,c[6]=d*s+v*u+w*Q+N*p,c[7]=d*l+v*M+w*y+N*q,c[8]=z*a+b*i+P*h+k*f,c[9]=z*n+b*o+P*V+k*m,c[10]=z*s+b*u+P*Q+k*p,c[11]=z*l+b*M+P*y+k*q,c[12]=x*a+G*i+L*h+W*f,c[13]=x*n+G*o+L*V+W*m,c[14]=x*s+G*u+L*Q+W*p,c[15]=x*l+G*M+L*y+W*q,c}static scale(t,e,r){const c=null==r?Mat4.create():r;return c[0]=t[0]*e[0],c[1]=t[1]*e[0],c[2]=t[2]*e[0],c[3]=t[3]*e[0],c[4]=t[4]*e[1],c[5]=t[5]*e[1],c[6]=t[6]*e[1],c[7]=t[7]*e[1],c[8]=t[8]*e[2],c[9]=t[9]*e[2],c[10]=t[10]*e[2],c[11]=t[11]*e[2],c[12]=t[12],c[13]=t[13],c[14]=t[14],c[15]=t[15],c}static translate(t,e,r){const c=null==r?Mat4.create():r;return c[0]=t[0],c[1]=t[1],c[2]=t[2],c[3]=t[3],c[4]=t[4],c[5]=t[5],c[6]=t[6],c[7]=t[7],c[8]=t[8],c[9]=t[9],c[10]=t[10],c[11]=t[11],c[12]=t[0]*e[0]+t[4]*e[1]+t[8]*e[2]+t[12],c[13]=t[1]*e[0]+t[5]*e[1]+t[9]*e[2]+t[13],c[14]=t[2]*e[0]+t[6]*e[1]+t[10]*e[2]+t[14],c[15]=t[3]*e[0]+t[7]*e[1]+t[11]*e[2]+t[15],c}static rotate(t,e,r,c){let a=null==c?Mat4.create():c;const n=Math.sqrt(r[0]*r[0]+r[1]*r[1]+r[2]*r[2]);if(!n)return null;let s=r[0],l=r[1],i=r[2];if(1!=n){const t=1/n;s*=t,l*=t,i*=t}const o=Math.sin(e),u=Math.cos(e),M=1-u,h=t[0],V=t[1],Q=t[2],y=t[3],f=t[4],m=t[5],p=t[6],q=t[7],g=t[8],I=t[9],A=t[10],F=t[11],d=s*s*M+u,v=l*s*M+i*o,w=i*s*M-l*o,N=s*l*M-i*o,z=l*l*M+u,b=i*l*M+s*o,P=s*i*M+l*o,k=l*i*M-s*o,x=i*i*M+u;return e?t!=a&&(a[12]=t[12],a[13]=t[13],a[14]=t[14],a[15]=t[15]):a=t,a[0]=h*d+f*v+g*w,a[1]=V*d+m*v+I*w,a[2]=Q*d+p*v+A*w,a[3]=y*d+q*v+F*w,a[4]=h*N+f*z+g*b,a[5]=V*N+m*z+I*b,a[6]=Q*N+p*z+A*b,a[7]=y*N+q*z+F*b,a[8]=h*P+f*k+g*x,a[9]=V*P+m*k+I*x,a[10]=Q*P+p*k+A*x,a[11]=y*P+q*k+F*x,a}static lookAt(t,e,r,c){const a=null==c?Mat4.create():c,n=t[0],s=t[1],l=t[2],i=e[0],o=e[1],u=e[2],M=r[0],h=r[1],V=r[2];if(n==i&&s==o&&l==u)return Mat4.identity(a);let Q,y,f,m,p,q,g,I,A,F;return g=n-i,I=s-o,A=l-u,F=1/Math.sqrt(g*g+I*I+A*A),g*=F,I*=F,A*=F,Q=h*A-V*I,y=V*g-M*A,f=M*I-h*g,F=Math.sqrt(Q*Q+y*y+f*f),F?(F=1/F,Q*=F,y*=F,f*=F):(Q=0,y=0,f=0),m=I*f-A*y,p=A*Q-g*f,q=g*y-I*Q,F=Math.sqrt(m*m+p*p+q*q),F?(F=1/F,m*=F,p*=F,q*=F):(m=0,p=0,q=0),a[0]=Q,a[1]=m,a[2]=g,a[3]=0,a[4]=y,a[5]=p,a[6]=I,a[7]=0,a[8]=f,a[9]=q,a[10]=A,a[11]=0,a[12]=-(Q*n+y*s+f*l),a[13]=-(m*n+p*s+q*l),a[14]=-(g*n+I*s+A*l),a[15]=1,a}static perspective(t,e,r,c,a){const n=null==a?Mat4.create():a,s=r*Math.tan(t*Math.PI/360),l=s*e,i=2*l,o=2*s,u=c-r;return n[0]=2*r/i,n[1]=0,n[2]=0,n[3]=0,n[4]=0,n[5]=2*r/o,n[6]=0,n[7]=0,n[8]=0,n[9]=0,n[10]=-(c+r)/u,n[11]=-1,n[12]=0,n[13]=0,n[14]=-c*r*2/u,n[15]=0,n}static ortho(t,e,r,c,a,n,s){const l=null==s?Mat4.create():s,i=e-t,o=r-c,u=n-a;return l[0]=2/i,l[1]=0,l[2]=0,l[3]=0,l[4]=0,l[5]=2/o,l[6]=0,l[7]=0,l[8]=0,l[9]=0,l[10]=-2/u,l[11]=0,l[12]=-(t+e)/i,l[13]=-(r+c)/o,l[14]=-(n+a)/u,l[15]=1,l}static transpose(t,e){const r=null==e?Mat4.create():e;return r[0]=t[0],r[1]=t[4],r[2]=t[8],r[3]=t[12],r[4]=t[1],r[5]=t[5],r[6]=t[9],r[7]=t[13],r[8]=t[2],r[9]=t[6],r[10]=t[10],r[11]=t[14],r[12]=t[3],r[13]=t[7],r[14]=t[11],r[15]=t[15],r}static inverse(t,e){const r=null==e?Mat4.create():e,c=t[0],a=t[1],n=t[2],s=t[3],l=t[4],i=t[5],o=t[6],u=t[7],M=t[8],h=t[9],V=t[10],Q=t[11],y=t[12],f=t[13],m=t[14],p=t[15],q=c*i-a*l,g=c*o-n*l,I=c*u-s*l,A=a*o-n*i,F=a*u-s*i,d=n*u-s*o,v=M*f-h*y,w=M*m-V*y,N=M*p-Q*y,z=h*m-V*f,b=h*p-Q*f,P=V*p-Q*m,k=1/(q*P-g*b+I*z+A*N-F*w+d*v);return r[0]=(i*P-o*b+u*z)*k,r[1]=(-a*P+n*b-s*z)*k,r[2]=(f*d-m*F+p*A)*k,r[3]=(-h*d+V*F-Q*A)*k,r[4]=(-l*P+o*N-u*w)*k,r[5]=(c*P-n*N+s*w)*k,r[6]=(-y*d+m*I-p*g)*k,r[7]=(M*d-V*I+Q*g)*k,r[8]=(l*b-i*N+u*v)*k,r[9]=(-c*b+a*N-s*v)*k,r[10]=(y*F-f*I+p*q)*k,r[11]=(-M*F+h*I-Q*q)*k,r[12]=(-l*z+i*w-o*v)*k,r[13]=(c*z-a*w+n*v)*k,r[14]=(-y*A+f*g-m*q)*k,r[15]=(M*A-h*g+V*q)*k,r}static toVecIV(t,e){const r=t[0],c=t[1],a=t[2],n=t[3],s=t[4],l=t[5],i=t[6],o=t[7],u=t[8],M=t[9],h=t[10],V=t[11],Q=t[12],y=t[13],f=t[14],m=t[15],p=e[0],q=e[1],g=e[2],I=e[3],A=new Float32Array(4);return A[0]=p*r+q*s+g*u+I*Q,A[1]=p*c+q*l+g*M+I*y,A[2]=p*a+q*i+g*h+I*f,A[3]=p*n+q*o+g*V+I*m,A}static screenPositionFromMvp(t,e,r,c){const a=.5*r,n=.5*c,s=Mat4.toVecIV(t,[e[0],e[1],e[2],1]);if(s[3]<=0)return[NaN,NaN];s[0]/=s[3],s[1]/=s[3],s[2]/=s[3];const l=Vec2.create();return l[0]=a+s[0]*a,l[1]=n-s[1]*n,l}}class Qtn{static create(){return new Float32Array(4)}static identity(t){const e=null==t?Qtn.create():t;return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}static inverse(t,e){const r=null==e?Qtn.create():e;return r[0]=-t[0],r[1]=-t[1],r[2]=-t[2],r[3]=t[3],r}static normalize(t){const e=Qtn.create(),r=t[0],c=t[1],a=t[2],n=Math.sqrt(r*r+c*c+a*a);if(n>0){const t=1/n;e[0]=r*t,e[1]=c*t,e[2]=a*t}return e}static multiply(t,e,r){const c=null==r?Qtn.create():r,a=t[0],n=t[1],s=t[2],l=t[3],i=e[0],o=e[1],u=e[2],M=e[3];return c[0]=a*M+l*i+n*u-s*o,c[1]=n*M+l*o+s*i-a*u,c[2]=s*M+l*u+a*o-n*i,c[3]=l*M-a*i-n*o-s*u,c}static rotate(t,e,r){const c=null==r?Qtn.create():r;let a=e[0],n=e[1],s=e[2];const l=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);if(0!==l){const t=1/l;a*=t,n*=t,s*=t}const i=Math.sin(.5*t);return c[0]=a*i,c[1]=n*i,c[2]=s*i,c[3]=Math.cos(.5*t),c}static toVecIII(t,e,r){const c=null==r?Vec3.create():r,a=Qtn.create(),n=Qtn.create(),s=Qtn.create();return Qtn.inverse(e,s),a[0]=t[0],a[1]=t[1],a[2]=t[2],Qtn.multiply(s,a,n),Qtn.multiply(n,e,s),c[0]=s[0],c[1]=s[1],c[2]=s[2],c}static toMatIV(t,e){const r=null==e?Mat4.create():e,c=t[0],a=t[1],n=t[2],s=t[3],l=c+c,i=a+a,o=n+n,u=c*l,M=c*i,h=c*o,V=a*i,Q=a*o,y=n*o,f=s*l,m=s*i,p=s*o;return r[0]=1-(V+y),r[1]=M-p,r[2]=h+m,r[3]=0,r[4]=M+p,r[5]=1-(u+y),r[6]=Q-f,r[7]=0,r[8]=h-m,r[9]=Q+f,r[10]=1-(u+V),r[11]=0,r[12]=0,r[13]=0,r[14]=0,r[15]=1,r}static slerp(t,e,r,c){const a=null==c?Qtn.create():c,n=t[0]*e[0]+t[1]*e[1]+t[2]*e[2]+t[3]*e[3];let s=1-n*n;if(s<=0)a[0]=t[0],a[1]=t[1],a[2]=t[2],a[3]=t[3];else if(s=Math.sqrt(s),Math.abs(s)<1e-4)a[0]=.5*t[0]+.5*e[0],a[1]=.5*t[1]+.5*e[1],a[2]=.5*t[2]+.5*e[2],a[3]=.5*t[3]+.5*e[3];else{const c=Math.acos(n),l=c*r,i=Math.sin(c-l)/s,o=Math.sin(l)/s;a[0]=t[0]*i+e[0]*o,a[1]=t[1]*i+e[1]*o,a[2]=t[2]*i+e[2]*o,a[3]=t[3]*i+e[3]*o}return a}}